{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, True, True, False, True, False]"}
{"code": "lambda x: (x['color']=='green' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['color']=='green' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, True, True, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, False, False, False, False, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, False, True, False, False, False, True, True, False, False, False, False, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, False, True, True, True, True, False, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, False, True, True, True, True, True, False]"}
{"code": "lambda x: (not (x['shape']=='circle') and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False, False, False, True, False, True, True, True, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, True, True, False, True, True, False]"}
{"code": "lambda x: (x['shape']=='square' or (not (x['shape']=='square') or x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or (not (x['shape']=='square') or x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or (not (x['shape']=='square') or x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, False, True, True, True, True, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, True, False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False, True, True]"}
{"code": "lambda x: (x['shape']=='square' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, False, False, True, False, True, True, True, False]"}
{"code": "lambda x: (x['shape']=='square' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, True, False, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, False, False, False, True, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, False, True, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, False, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, True, True, False, True, False, False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, False, True, False, True, True, False, True, False, True, False, True, False]"}
{"code": "lambda x: (not (x['color']=='green') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, True, False, False, True, True, True, False, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' and (x['color']=='blue' and (not (x['color']=='red') and x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['shape']=='triangle' and (x['color']=='blue' and (not (x['color']=='red') and x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['shape']=='triangle' and (x['color']=='blue' and (not (x['color']=='red') and x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, True, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['color']=='green') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['color']=='green') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['color']=='green') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, True, False, False, False, False]"}
{"code": "lambda x: (x['shape']=='circle' or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True, False, False, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, True, True, False, True, False]"}
{"code": "lambda x: not (x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, True, True, False, True, True, True, True, True, False]"}
{"code": "lambda x: not (x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: not (x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, False, False, False, True, True, False, False, False, True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, False, True]"}
{"code": "lambda x: (x['shape']=='square' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['shape']=='square' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, False, False, True, True, False, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, False, True, True, True, True, False, True, False, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (x['color']=='red' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, False, True, True]"}
{"code": "lambda x: (x['color']=='red' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (x['color']=='red' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, False, False, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, True, False, True, True, True, False, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, True, False, True, False, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, True, False, True, True, True, True, True, True, True, True, True, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, False, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, False, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') and x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, False]"}
{"code": "lambda x: (not (x['color']=='green') and x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, True, False, True, False, False, False]"}
{"code": "lambda x: (not (x['color']=='green') and x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, False, False, True, False, False, False, True, False, False, False]"}
{"code": "lambda x: (x['shape']=='triangle' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, True, False, False, False, False, False, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, True, False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['shape']=='triangle' and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['color']=='blue' or (x['shape']=='circle' or (x['shape']=='circle' or not (x['color']=='blue'))))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='blue' or (x['shape']=='circle' or (x['shape']=='circle' or not (x['color']=='blue'))))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='blue' or (x['shape']=='circle' or (x['shape']=='circle' or not (x['color']=='blue'))))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, False, False, True, True, False]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, False, True, False, True, True, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, False, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, True, True, True, True, False]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, False, False, True, False, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, False]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='green') and not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, False, False, True, False, True, True, True, False, True, False, False, True]"}
{"code": "lambda x: (not (x['color']=='green') and not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='green') and not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False, True, False, False, False, True, False]"}
{"code": "lambda x: (not (x['shape']=='square') and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, False, True, False, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='square') and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, False, True, True, True, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='square') and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='circle') or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='circle') or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='circle') or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') and (x['shape']=='circle' and x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, True, False, False, True]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, False, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, False, True, True, True, False, True, True, False, True, True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, False, True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, True, True, False, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or (not (x['shape']=='triangle') and not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, False]"}
{"code": "lambda x: (x['color']=='green' or (not (x['shape']=='triangle') and not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (x['color']=='green' or (not (x['shape']=='triangle') and not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, False, True, True, False, True, True, True, False, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, False, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, True, True, True, False, True, True, True, False, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (x['shape']=='square' or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (x['shape']=='square' or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (x['shape']=='square' or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: not (x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, False, False, False, True, True, False, True]"}
{"code": "lambda x: not (x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, True, True, True, True, True, False, True, True, True, False, False, True]"}
{"code": "lambda x: not (x['shape']=='circle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, False, False, True, False, False, True, True, False, False, False]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, False, True, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, False, True, True, False, False, False]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, True, True, True, True, False, True, True, False, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True, True, False, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, False, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, False, True, True, True, True, True, True, True, False]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='circle' and x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='circle' and x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, True]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='circle' and x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, False]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='blue') and x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='square' or not (x['shape']=='circle')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False, True, False]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='square' or not (x['shape']=='circle')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (x['color']=='red' or (x['shape']=='square' or not (x['shape']=='circle')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, False]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='red' and x['color']=='green')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, False, False, True, True, True, False, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, False, False, True, False]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, False, True, True, False, False, True, True, True, True, False]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, True, True]"}
{"code": "lambda x: x['color']=='blue'", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, False, False, False, False]"}
{"code": "lambda x: x['color']=='blue'", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, False, False, True, False, False, False, False, False, True, False]"}
{"code": "lambda x: x['color']=='blue'", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, False, True, False, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='square' or (x['color']=='blue' or not (x['shape']=='square'))))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='square' or (x['color']=='blue' or not (x['shape']=='square'))))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='square' or (x['color']=='blue' or not (x['shape']=='square'))))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or (not (x['shape']=='circle') or x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, False, True, True, True, True, True, True, True, True, False]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or (not (x['shape']=='circle') or x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or (not (x['shape']=='circle') or x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, False, False, False, True, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True, True, True, True, True, True, False, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['color']=='green' or (not (x['color']=='blue') or x['color']=='green')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['color']=='green' or (not (x['color']=='blue') or x['color']=='green')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['color']=='green' or (not (x['color']=='blue') or x['color']=='green')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, True]"}
{"code": "lambda x: (x['color']=='green' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, False, False, True, True, False, True]"}
{"code": "lambda x: (x['color']=='green' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, False, True, False, True, False, False, False, True, False, False, True, False]"}
{"code": "lambda x: (x['color']=='green' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, False, False, True, False, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, True, True, True, True, False, False, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, True, True, True, True, False]"}
{"code": "lambda x: (not (x['color']=='red') or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, False]"}
{"code": "lambda x: (x['shape']=='circle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, False, False, True, False]"}
{"code": "lambda x: (x['shape']=='circle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, False, False, False, False]"}
{"code": "lambda x: (x['shape']=='circle' and not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, False, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') and (x['shape']=='square' and not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') and (x['shape']=='square' and not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, False, True, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') and (x['shape']=='square' and not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, True, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['shape']=='circle') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['shape']=='circle') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['shape']=='circle') or not (x['color']=='blue')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, False, False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, False]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False, True, True]"}
{"code": "lambda x: (x['color']=='green' or (x['shape']=='triangle' or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, False, False, True, True, True, True, True, False, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, False, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, False, True, False, False, True, True, True]"}
{"code": "lambda x: (x['color']=='green' or not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='square') or not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='square') or not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='square') or (not (x['shape']=='square') or not (x['shape']=='triangle')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, False, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or x['color']=='blue')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, True, False, False, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, False, False, False, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') or (x['color']=='green' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') or (x['color']=='green' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='blue') or (x['color']=='green' or x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='green' and (x['color']=='blue' and x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='green' and (x['color']=='blue' and x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='green' and (x['color']=='blue' and x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['shape']=='triangle') or x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['shape']=='triangle') or x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='red') or (not (x['shape']=='triangle') or x['color']=='red'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, True, False, False, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, False, False, True, False, False, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True, False, True, False, False, True, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, True, True, True, True, True, True, False, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True, True, True, True, False, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, False, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, True, False, True, True, True, False, True, False]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, False, False, False, False, False, True]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='square')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, False, False, True, False, False, False, False, True, False, False, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, False, True, True, False, True, False, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (x['shape']=='triangle' or not (x['color']=='red')))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, True, False, True]"}
{"code": "lambda x: (x['color']=='red' or (not (x['shape']=='square') or x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, True]"}
{"code": "lambda x: (x['color']=='red' or (not (x['shape']=='square') or x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True, False, True, True]"}
{"code": "lambda x: (x['color']=='red' or (not (x['shape']=='square') or x['color']=='green'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, True, True]"}
{"code": "lambda x: x['color']=='green'", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, False, False, True, True, True, False, False, False, True, False, False, False, True]"}
{"code": "lambda x: x['color']=='green'", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False]"}
{"code": "lambda x: x['color']=='green'", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True, True, False, False, True, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True, True, True, True, False, False, True, False, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, True, False, True, False, False]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [False, False, True, True, True, True, True, True, True, True, False, True, True, True]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, False, True, True, False, True, True, False, False]"}
{"code": "lambda x: (x['shape']=='square' or x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or (not (x['shape']=='square') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (not (x['color']=='green') or (not (x['shape']=='square') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='green') or (not (x['shape']=='square') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='triangle' or (not (x['shape']=='triangle') and (not (x['shape']=='square') and (x['color']=='green' and x['shape']=='triangle'))))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['shape']=='triangle' or (not (x['shape']=='triangle') and (not (x['shape']=='square') and (x['color']=='green' and x['shape']=='triangle'))))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, False, True, False, True, True, True, True, True, False, True, False]"}
{"code": "lambda x: (x['shape']=='triangle' or (not (x['shape']=='triangle') and (not (x['shape']=='square') and (x['color']=='green' and x['shape']=='triangle'))))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, False, True, True, True, False, True, True, False, True, False]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False, False, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, False, True, True, True, True, False, True, True, False, True, False, True]"}
{"code": "lambda x: (not (x['shape']=='triangle') or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [True, False, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (x['color']=='red' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, False, False, True]"}
{"code": "lambda x: (x['color']=='red' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}] and returns the corresponding item in [False, False, True, False, False, False]"}
{"code": "lambda x: (x['color']=='red' and not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, False, False, False, False, False, False, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or not (x['color']=='blue'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [False, True, True, True, False, True, True, True]"}
{"code": "lambda x: (x['color']=='blue' and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, False, False, True, False, False, False, False, False, False, False]"}
{"code": "lambda x: (x['color']=='blue' and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False, False, False, False, True, True, False, False, False, False, False, False, True, False]"}
{"code": "lambda x: (x['color']=='blue' and x['shape']=='triangle')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [False, False, True, True, False, False, False, False, False, False, False, False, False, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['color']=='blue') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, False, True, True, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['color']=='blue') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (not (x['color']=='blue') or x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, False, False, True, False, True, True, True, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, False, False, False, True]"}
{"code": "lambda x: (x['shape']=='circle' or not (x['shape']=='square'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, True, True, False, True, False]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['color']=='green' or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['color']=='green' or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['shape']=='circle') or (x['color']=='green' or not (x['shape']=='square')))", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, True, True, True]"}
{"code": "lambda x: (not (x['color']=='blue') and not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}] and returns the corresponding item in [False, True, False]"}
{"code": "lambda x: (not (x['color']=='blue') and not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, False, True]"}
{"code": "lambda x: (not (x['color']=='blue') and not (x['shape']=='circle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'red'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'circle', 'color': 'green'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'green'}] and returns the corresponding item in [True, True, True, True, True, True, True, True, True, True, False, True, True, False]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'circle', 'color': 'red'}, {'shape': 'square', 'color': 'red'}, {'shape': 'circle', 'color': 'red'}] and returns the corresponding item in [True, True, True]"}
{"code": "lambda x: (x['color']=='blue' or not (x['shape']=='triangle'))", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'blue'}] and returns the corresponding item in [True]"}
{"code": "lambda x: (x['color']=='blue' or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False]"}
{"code": "lambda x: (x['color']=='blue' or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'square', 'color': 'green'}] and returns the corresponding item in [False, False, False]"}
{"code": "lambda x: (x['color']=='blue' or x['color']=='red')", "n1": "Create a function that takes in each item in [{'shape': 'triangle', 'color': 'blue'}, {'shape': 'circle', 'color': 'blue'}, {'shape': 'square', 'color': 'red'}, {'shape': 'triangle', 'color': 'green'}, {'shape': 'square', 'color': 'green'}, {'shape': 'triangle', 'color': 'red'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}, {'shape': 'square', 'color': 'blue'}, {'shape': 'triangle', 'color': 'blue'}] and returns the corresponding item in [True, True, True, False, False, True, True, True, True, True]"}
